@page
@model RegisterModel
@{
    ViewData["Title"] = "Register";
}

<h1>@ViewData["Title"]</h1>

<div class="row">
    <div class="col-md-5">
        <form id="registerForm" asp-route-returnUrl="@Model.ReturnUrl" method="post" enctype="multipart/form-data">
            <h2>Create a new account.</h2>
            <hr />
            <div asp-validation-summary="ModelOnly" class="text-danger" role="alert"></div>
            <div class="form-floating mb-3">
                <input asp-for="Input.FamilyName" class="form-control" autocomplete="family-name" aria-required="true" placeholder="famil name" />
                <label asp-for="Input.FamilyName">Family Name</label>
                <span asp-validation-for="Input.FamilyName" class="text-danger"></span>
            </div>
            <div class="form-floating mb-3">
                <input asp-for="Input.FirstName" class="form-control" autocomplete="first name" aria-required="true" placeholder="first name" />
                <label asp-for="Input.FirstName">First Name</label>
                <span asp-validation-for="Input.FirstName" class="text-danger"></span>
            </div>
            <div class="form-floating mb-3">
                <input asp-for="Input.Age" class="form-control" autocomplete="age" aria-required="true" placeholder="age" />
                <label asp-for="Input.Age">Age</label>
                <span asp-validation-for="Input.Age" class="text-danger"></span>
            </div>
            <div class="form-floating mb-3">
                <input asp-for="Input.Email" class="form-control" autocomplete="username" aria-required="true" placeholder="name@example.com" />
                <label asp-for="Input.Email">Email</label>
                <span asp-validation-for="Input.Email" class="text-danger"></span>
            </div>
            <div class="form-floating mb-3">
                <input asp-for="Input.Password" class="form-control" autocomplete="new-password" aria-required="true" placeholder="password" />
                <label asp-for="Input.Password">Password</label>
                <span asp-validation-for="Input.Password" class="text-danger"></span>
            </div>
            <div class="form-floating mb-3">
                <input asp-for="Input.ConfirmPassword" class="form-control" autocomplete="new-password" aria-required="true" placeholder="password" />
                <label asp-for="Input.ConfirmPassword">Confirm Password</label>
                <span asp-validation-for="Input.ConfirmPassword" class="text-danger"></span>
            </div>

            <div class="form-floating mb-3">
                <select asp-for="Input.Role" asp-items="@Model.Input.RoleList" class="form-select" id="mySelect">
                    <option disabled selected>--Select a Role--</option>
                </select>
            </div>

            <br>

            <div id="contentDiv"></div>

            <button id="registerSubmit" type="submit" class="w-100 btn btn-lg btn-primary">Register</button>
        </form>
    </div>
    <div class="col-md-6 col-md-offset-2">
        <section>
            <h3>Use another service to register.</h3>
            <hr />
            @{
                if ((Model.ExternalLogins?.Count ?? 0) == 0)
                {
                    <div>
                        <p>
                            There are no external authentication services configured. See this article
                            about setting up this ASP.NET application to support logging in via external service.
                        </p>
                    </div>
                }
                else
                {
                    <form id="external-account" asp-page="./ExternalLogin" asp-route-returnUrl="@Model.ReturnUrl" method="post" class="form-horizontal">
                        <div>
                            <p>
                                @foreach (var provider in Model.ExternalLogins!)
                                {
                                    <button type="submit" class="btn btn-primary" name="provider" value="@provider.Name" title="Log in using your @provider.DisplayName account">@provider.DisplayName</button>
                                }
                            </p>
                        </div>
                    </form>
                }
            }
        </section>
    </div>
</div>

<script>
    const selectElement = document.getElementById('mySelect');
    const contentDiv = document.getElementById('contentDiv');

    selectElement.addEventListener('change', (event) => {
        const selectedValue = event.target.value;

        console.log('Selected value:', selectedValue);

        switch (selectedValue) {
            case 'Candidat':
                fetch('./../../pages/candidat.html')
                    .then(response => response.text())
                    .then(data => { contentDiv.innerHTML = data; })
                    .catch(error => { contentDiv.innerHTML = "Error fetching external content."; });
                break;

            case 'Recruteur':
                fetch('./../../pages/recruteur.html')
                    .then(response => response.text())
                    .then(data => { contentDiv.innerHTML = data; })
                    .catch(error => { contentDiv.innerHTML = "Error fetching external content."; });
                break;
            default:
                contentDiv.innerHTML = "No valid selection";
        }
    });
</script>


@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    
}
